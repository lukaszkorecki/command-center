# -*- mode: sh -*-

## custom paths
export LC_ALL=en_US.UTF-8
export LANG=$LC_ALL
export SHELL=/bin/zsh
export PATH=$HOME/.emacs.d/etc/bin:$PATH

export PATH=$HOME/bin:$PATH
export PATH=./node_modules/.bin:$PATH
export PATH=/opt/homebrew/bin:$PATH
export PATH=/usr/local/bin:$PATH

brewPrefix=""
if [[ -e $(which brew) ]]; then
  brewPrefix=$(brew --prefix)
fi

if [[ -e "${brewPrefix}/bin/brew" ]] ; then
  eval "$($brewPrefix/bin/brew shellenv)"
fi

if [[ "$brewPrefix" != "" ]] ; then
  export HOMEBREW_NO_AUTO_UPDATE=2
  export PATH=$brewPrefix/bin:$PATH

  pythonPath=$brewPrefix/opt/python/libexec/bin
  if [[ -e $pythonPath ]] ; then
    export PATH="$pythonPath:$PATH"
  fi

  if [[ -e $brewPrefix/opt/openjdk ]] ; then
    export PATH="$brewPrefix/opt/openjdk/bin:$PATH"
    export JAVA_CMD=$brewPrefix/opt/openjdk/bin/java
    export JAVAHOME=$brewPrefix/opt/openjdk/
    export JAVA_HOME=$JAVAHOME
  fi

  if [[ -e $brewPrefix/opt/openjdk@11 ]] ; then
    export PATH="$brewPrefix/opt/openjdk@11/bin:$PATH"
    export JAVA_CMD=$brewPrefix/opt/openjdk@11/bin/java
    export JAVAHOME=$brewPrefix/opt/openjdk@11/
    export JAVA_HOME=$JAVAHOME

  fi
fi

## aliases
# go to git repo root
alias gcd='cd $(git root)'
# go to project root, might be repo root but not necessarily
alias pcd='cd $(project-root-path)'

## navigation
# make path operations work like bash (e.g. M-backspace deletes path fragments)
autoload -U select-word-style
select-word-style bash

# auto-cd
setopt AUTO_CD


## load completions
fpath+=(~/.emacs.d/etc/zsh/)

autoload -Uz compinit && compinit
autoload _docker
autoload _docker-compose
autoload _rg
autoload _git

# Load autocomplete for other tools not supported by zsh directly
if [[ "$(which op 2>&1)" == /* ]] ; then
  eval "$(op completion zsh)";
  compdef _op op
fi

if [[ "$(which doctl 2>&1)" == /* ]] ; then
  eval "$(doctl completion zsh)"
fi


# git info in prompt and such
autoload -Uz vcs_info


# disable docker cli hints
export DOCKER_CLI_HINTS=false

# History Configuration
HISTSIZE=5000
SAVEHIST=5000
HISTFILE=~/.zsh_history
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt incappendhistory


# Make Emacs the default editor, and use emacsclient to open files
alias emacs='emacsclient -nw'
export EDITOR="emacs"

# secrets and work stuff
if [[ -e ~/.private/env.sh  ]] ; then
  source ~/.private/env.sh
fi


# integration with Vterm:
if [[ "$INSIDE_EMACS" = 'vterm' ]] \
     && [[ -n ${EMACS_VTERM_PATH} ]] \
     && [[ -f ${EMACS_VTERM_PATH}/etc/emacs-vterm-zsh.sh ]]; then
	source ${EMACS_VTERM_PATH}/etc/emacs-vterm-zsh.sh

  alias clear='vterm_printf "51;Evterm-clear-scrollback";tput clear'

  autoload -U add-zsh-hook
  add-zsh-hook -Uz chpwd (){ print -Pn "\e]2;%m:%2~\a" }
fi


# prompt
precmd_vcs_info() { vcs_info }
precmd_sec_info() {
  if [[ "$OP_SECRETS_LOADED" == "" ]] ; then
    export _SEC_FLAG="üîê"
  else
    export _SEC_FLAG="üîì"
  fi
}

precmd_functions+=( precmd_vcs_info )
precmd_functions+=( precmd_sec_info )

setopt PROMPT_SUBST
zstyle ':vcs_info:git:*' formats '%F{240}(%b)'
zstyle ':vcs_info:*' enable git

BR=$'\n'
export PROMPT='# ${_SEC_FLAG} %1~ ${vcs_info_msg_0_} ${BR}# '

if [[ "$INSIDE_EMACS" = 'vterm' ]] ; then
  vterm_prompt_end() {
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)"
  }
  PROMPT=$PROMPT'%{$(vterm_prompt_end)%}'
fi
