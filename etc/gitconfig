[user]
  email = lukasz@korecki.me
  name = Łukasz Korecki

[global]
  autoSetupRemote = true

[diff]
    external = difft

[color]
  ui = true
  diff = true

[core]
  pager = less -F -X
  excludesfile = ~/.gitignore_global


[grep]
  linenumber = true
  extendedRegexp = true

[push]
  default = current

[alias]
  update = !git fetch -ap && git pull -r && git cleanup-branches && git submodule update --init --recursive
  c = commit
  cm = commit -m
  ca = commit --amend
  default-remote-branch = ! git remote show origin | grep HEAD | cut -d: -f2 | tr -d ' '
  cleanup-branches = !git fetch -a -p && git branch --merged $(git default-remote-branch) | grep -v "$(git default-remote-branch)$" | xargs git branch -d || true
  recent-branches=!git branch -r --sort=-committerdate | head -n10
  co = checkout
  g = !git --no-pager grep --color -n
  l = log
  lo = log --graph --oneline --abbrev-commit
  ll = log --graph --pretty='format:%h | %an | %s'
  fetch-pr = "!f() { git fetch origin refs/pull/$1/head:pr/$1; } ; f"
  pl = !git pull -r -u origin $(git cb)

  pfff = !git push --force origin $(git cb)

  re-continue = rebase --continue
  re-skip = rebase --skip
  pull-all = pull --recurse-submodules -r
  ss = status
  s = status -sb
  m = merge --no-ff
  zip-current-branch = !git archive --format zip --output ./$(basename $(pwd)).zip $(git cb)
  last = rev-parse HEAD
  last-tag = !git for-each-ref --sort=creatordate --format '%(refname)' refs/tags  | tail -1 | xargs basename
  root = rev-parse --show-toplevel
  d = diff
  dc = diff --cached
  wd = diff --color-words
  wdc = diff --color-words --cached

  serve = daemon --reuseaddr --verbose  --port=4000 --base-path=. --export-all ./.git

  cb = !git rev-parse --abbrev-ref HEAD 2>/dev/null
  current-branch = !git cb

  track-upstream = !git fetch -a && git branch --set-upstream-to=origin/$(git cb) $(git cb)
  push-and-track= !git push origin $(git cb) && git track-upstream
  pull-and-track = !git fetch -atp && git track-upstream && git pull -r
  safe-pull = !git stash && git pull -r origin $(git cb) && git stash pop

  llog = log --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an%Cgreen%d %Creset%s' --date=iso
  changelog = log --pretty=format:'%Cgreen%d %Creset%s' --date=iso
  cl = !git clone git@github.com:$1.git

[branch]
	autoSetupMerge = true

[github]
	user = lukaszkorecki
[pull]
	ff = only

[includeIf "gitdir:~/ps/"]
  path = "~/.private/gitconfig"
